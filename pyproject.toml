[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "eopf-geozarr-pipeline"
version = "0.1.0"
description = "Pipeline to discover EOPF Zarr v2 inputs, convert (eopf_geozarr), and register GeoZarr / Zarr v3 outputs."
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [{ name = "Development Seed", email = "info@developmentseed.org" }]
maintainers = [
    { name = "Development Seed", email = "info@developmentseed.org" },
]
keywords = ["zarr", "eopf", "sentinel", "geospatial", "geozarr"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic-zarr>=0.8.0",
    "zarr>=3.1.1",
    "xarray>=2025.7.1",
    "dask[array,distributed]>=2025.5.1",
    "numpy>=2.3.1",
    "rioxarray>=0.13.0",
    "cf-xarray>=0.8.0",
    "typing-extensions>=4.0.0",
    "aiohttp>=3.8.1",
    "s3fs>=2024.6.0",
    "boto3>=1.34.0",
    "pyproj>=3.7.0",
    "ipykernel>=6.30.1",
    "jupyter>=1.1.1",
    "bokeh>=3.7.3",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit[toml]>=1.7.0",
    "safety>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.1.0",
    "pymdown-extensions>=10.0",
    "mike>=2.1.3",
]

[project.urls]
Homepage = "https://github.com/developmentseed/eopf-geozarr"
Repository = "https://github.com/developmentseed/eopf-geozarr"
Issues = "https://github.com/developmentseed/eopf-geozarr/issues"
Documentation = "https://github.com/developmentseed/eopf-geozarr/tree/main/docs"

[project.scripts]
eopf-geozarr = "eopf_geozarr.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["eopf_geozarr*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["zarr.*", "xarray.*", "rioxarray.*", "cf_xarray.*", "dask.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "network: marks tests that require network access",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.uv]
default-groups = ["dev", "test"]
