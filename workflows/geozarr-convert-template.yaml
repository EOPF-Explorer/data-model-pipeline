apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: geozarr-convert
  namespace: argo
spec:
  entrypoint: run-convert

  volumeClaimTemplates:
    - metadata:
        name: outpvc
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi

  arguments:
    parameters:
      - name: stac_url
        value: "https://objectstore.eodc.eu:2222/e05ab01a9d56408d82ac32d69a5aae2a:202505-s02msil2a/18/products/cpm_v256/S2B_MSIL2A_20250518T112119_N0511_R037_T29RLL_20250518T140519.zarr"
      - name: output_zarr
        value: "./S2B_MSIL2A_20250518_T29RLL_geozarr.zarr"
      - name: groups
        value: "/measurements/reflectance/r10m /measurements/reflectance/r20m /measurements/reflectance/r60m"
      - name: dask_perf_html
        value: "out/debug/dask-report-threads.html"

  templates:
    - name: run-convert
      volumes:
        - name: tmp
          emptyDir: {}

      inputs:
        parameters:
          - name: stac_url
          - name: output_zarr
          - name: groups
          - name: dask_perf_html

      script:
        image: eopf-geozarr:dev  
        imagePullPolicy: IfNotPresent
        command: ["sh", "-lc"]
        volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: outpvc
            mountPath: /outputs
        source: |
          set -euo pipefail

          STAC="{{inputs.parameters.stac_url}}"
          OUT="{{inputs.parameters.output_zarr}}"
          GROUPS_RAW="{{inputs.parameters.groups}}"
          PERF="{{inputs.parameters.dask_perf_html}}"
          OUTDIR="/outputs"

          case "$STAC" in *â€¦*|*...*) echo "ERROR: stac_url contains ellipsis"; exit 64;; esac

          mkdir -p "$OUTDIR" "$(dirname "$PERF")"

          echo "=== preflight ==="
          echo "stac_url=$STAC"
          if command -v curl >/dev/null 2>&1; then
            (curl -sI --max-time 8 "$STAC" | head -n1) || true
          elif command -v wget >/dev/null 2>&1; then
            (wget -qS --spider "$STAC" 2>&1 | head -n1) || true
          else
            echo "(no curl/wget in image; skipping HEAD)"
          fi

          # Normalize group paths
          NORM_GROUPS=""
          for g in $GROUPS_RAW; do
            [ -z "$g" ] && continue
            case "$g" in /*) NORM="$g";; *) NORM="/$g";; esac
            NORM="$(printf "%s" "$NORM" | sed 's#//*#/#g')"
            NORM_GROUPS="$NORM_GROUPS $NORM"
          done
          GROUPS="$(printf "%s" "$NORM_GROUPS" | sed 's/^ *//')"
          echo "groups(norm)=$GROUPS"

          # Validate groups early with xarray
          python - "$STAC" $GROUPS <<'PY'
          import sys, xarray as xr

          def iter_children(node):
              groups = getattr(node, "groups", None)
              if isinstance(groups, dict):
                  yield from groups.items()
              elif isinstance(groups, (list, tuple)):
                  for name in groups:
                      try:
                          yield name, node[name]
                      except Exception:
                          pass
              else:
                  children = getattr(node, "children", None)
                  if isinstance(children, dict):
                      yield from children.items()

          if len(sys.argv) < 2:
              print("no args passed to validation; skipping"); sys.exit(0)
          stac, *groups = sys.argv[1:]
          dt = xr.open_datatree(stac, engine="zarr", consolidated=None)

          print("=== available groups ===")
          def walk(node, prefix=""):
              path = prefix or "/"
              print(path)
              for name, child in iter_children(node):
                  newp = f"{prefix}/{name}" if prefix else f"/{name}"
                  walk(child, newp)
          walk(dt)

          bad = []
          for g in groups:
              key = g.strip("/")
              try:
                  _ = dt[key]
              except Exception as e:
                  print(f"[error] {g}: {e}")
                  bad.append(g)
          if bad:
              try:
                  meas = dt["measurements"]
                  print("candidates under /measurements:")
                  for name, _child in iter_children(meas):
                      print("  /measurements/" + name)
              except Exception:
                  pass
              sys.exit(64)
          PY

          echo "=== convert ==="
          set -x
          eopf-geozarr convert \
            --dask-cluster \
            --dask-perf-html "$PERF" \
            "$STAC" \
            "$OUT" \
            --verbose \
            $(for g in $GROUPS; do printf -- ' --groups %s' "$g"; done)
          set +x

          cp -f "$PERF" "$OUTDIR/dask-report.html" 2>/dev/null || true

          echo "=== package artifact ==="
          tar -czf "$OUTDIR/geozarr.tar.gz" -C "$(dirname "$OUT")" "$(basename "$OUT")"

        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"

      outputs:
        artifacts:
          - name: dask-report
            path: "{{inputs.parameters.dask_perf_html}}"
          - name: geozarr-tar
            path: /outputs/geozarr.tar.gz
